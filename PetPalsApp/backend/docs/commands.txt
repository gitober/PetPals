npm install eslint-plugin-jsx-a11y --save-dev
npm install multer
npm install helmet
npm install morgan
npm install express-rate-limit
npm install cors
npm install bcrypt jsonwebtoken validator
npm install --save-dev jest supertest
npm install socket.io
npm install bcrypt
npm install validator
npm install nodemailer
npm install express-rate-limit
npm install --save-dev @babel/preset-env @babel/preset-react @babel/preset-typescript babel-jest

-
npm ls
npm prune
npm install react-scripts@latest
npx eslint .

rm -rf node_modules package-lock.json
npm cache clean --force
npm install



# Update Node.js
nvm install --lts

# Update npm
npm install -g npm

# Update MongoDB Node.js Driver
npm install mongoose mongodb


NEW: 
npm install react-router-dom
npm install multer
npm install body-parser
npm install express

npm i -g jest-test-gen
npm install react-scripts --save-dev

Env Variables

Rename the dotenv file to .env and add the following
NODE_ENV = development
PORT = 4000
MONGO_URI = your_mongodb_uri
TEST_MONGO_URI=your_test_mongodb_uri
SECRET = abc123efg
Change the JWT SECRET from abc123efg to what you want, and replace MONGO_URI.

2. Install Dependencies

npm install express dotenv cors mongoose jsonwebtoken bcrypt colors validator
3. Install Dev Dependencies

npm install nodemon concurrently jest supertest  cross-env -D
Run
# Run backend (:4000)
npm run dev
Run tests
# Run tests 
npm test
Sample User Logins
jane@email.com
R3g5T7#gh

john@email.com
R3g5T7#gh


npm install express
npm install mongoose
npm install dotenv
npm install nodemon --save-dev

(learn more about these)
npm install cors
npm install cookie-parser 
npm install bcrypt 
npm install jsonwebtoken

(START)
npm run dev
npm start

Get tokens in terminal
-node
-require('crypto').randomBytes(64).toString('hex')